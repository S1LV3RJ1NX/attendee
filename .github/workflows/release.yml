name: Create Release and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version increment type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      is_prerelease:
        description: "Is this a pre-release?"
        required: true
        type: boolean
        default: false
      client_name:
        description: "Client name (optional)"
        required: false
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GHCR_PAT }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Calculate new version
        id: version
        run: |
          current_version=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$current_version"

          case "${{ github.event.inputs.version_type }}" in
            major)
              new_version="$((major + 1)).0.0"
              ;;
            minor)
              new_version="${major}.$((minor + 1)).0"
              ;;
            patch)
              new_version="${major}.${minor}.$((patch + 1))"
              ;;
          esac

          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "New version will be: v$new_version"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Convert owner to lowercase
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ghcr.io/${{ env.OWNER_LOWER }}/attendee:v${{ env.NEW_VERSION }}${{ github.event.inputs.client_name != '' && format('-{0}', github.event.inputs.client_name) || '' }}
            ${{ github.event.inputs.client_name == '' && 'ghcr.io/s1lv3rj1nx/attendee:latest' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=registry,compression=zstd
          provenance: false

      # Add this step after the build
      - name: Clean up Docker images
        if: always() # Run even if previous steps fail
        run: docker image prune -f

      - name: Generate Release Notes
        uses: release-drafter/release-drafter@v5
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
        with:
          config-name: release-drafter.yml
          version: v${{ env.NEW_VERSION }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: ${{ steps.release_drafter.outputs.body }}
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
